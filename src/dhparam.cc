DH *get_dh2048() {
  static unsigned char dh2048_p[]={
    0xF1,0x9D,0x80,0xC5,0xC2,0x7F,0xE8,0xA5,0x37,0xDA,0x28,0x46,
    0x6C,0x95,0x0A,0xC5,0x6C,0xE3,0x7E,0x1D,0x1F,0x4A,0x2E,0xD7,
    0x6B,0xC1,0x80,0x4E,0xC9,0xC0,0x3F,0xB3,0x57,0x73,0x72,0xF2,
    0xDA,0x30,0x15,0xB1,0xD3,0xD6,0x25,0x90,0xAF,0x8B,0x3F,0x81,
    0x46,0x75,0xB1,0x1E,0x1B,0x85,0x5A,0x6C,0x13,0xA1,0x73,0x65,
    0xFC,0x90,0xF3,0xBC,0xB9,0x9C,0xA0,0x62,0x74,0x7C,0x24,0x24,
    0x27,0x80,0x12,0x3D,0x36,0xE9,0x62,0x78,0x31,0xE9,0x2F,0x96,
    0xF4,0xD4,0xF2,0x04,0xEF,0x24,0x2C,0x60,0x04,0x41,0xF0,0x3E,
    0xE9,0xF4,0xB4,0x5C,0x4F,0xFB,0xF3,0x64,0x91,0xB1,0x9F,0x5B,
    0xBF,0xE5,0xBE,0x6F,0xD7,0x5B,0xED,0x34,0x94,0x51,0x58,0xDF,
    0x00,0x5B,0x58,0xAE,0xBB,0x53,0x50,0xDE,0xFC,0x0A,0x91,0x6F,
    0x3B,0xC7,0x7A,0x5E,0x7C,0xEE,0x5F,0x5E,0x3E,0x41,0x00,0x82,
    0xD5,0x45,0x98,0xCC,0x01,0xFB,0x5C,0x64,0xBB,0xFB,0x06,0x55,
    0xE5,0x19,0x6A,0x38,0x77,0x40,0x01,0xC6,0xCE,0xB5,0x52,0x82,
    0xAA,0x7B,0x80,0xE6,0x37,0xB3,0x10,0x89,0x6E,0x42,0x63,0x33,
    0xF8,0xCC,0xB6,0xC8,0xC6,0x9D,0xE2,0x98,0x3B,0xFC,0xFE,0xE4,
    0xD2,0xB5,0xD3,0x19,0x6F,0xD7,0x62,0xBC,0xAA,0x16,0x92,0x14,
    0xA0,0xD0,0xC1,0x7B,0xA9,0xE8,0x16,0xFC,0x6A,0x66,0x6F,0x29,
    0xCA,0x18,0x28,0x4C,0x06,0xD8,0xAB,0x92,0x40,0xD5,0x83,0x9D,
    0xEB,0x23,0x17,0x9E,0x06,0x20,0xF7,0xE8,0x8C,0xB9,0x0D,0xE7,
    0x9D,0x40,0x50,0xA7,0xA1,0x74,0xD6,0xDF,0xF2,0x12,0x08,0xB3,
    0x6B,0x4F,0x4A,0xAB,
  };
  static unsigned char dh2048_g[]={
    0x02,
  };
  DH *dh;
  BIGNUM *dhp_bn, *dhg_bn;

  if ((dh=DH_new()) == NULL) return(NULL);
  dhp_bn = BN_bin2bn(dh2048_p, sizeof(dh2048_p), NULL);
  dhg_bn = BN_bin2bn(dh2048_g, sizeof(dh2048_g), NULL);
#if (defined(LIBRESSL_VERSION_NUMBER) && LIBRESSL_VERSION_NUMBER >= 0x30500000L) || \
    (!defined(LIBRESSL_VERSION_NUMBER) && OPENSSL_VERSION_NUMBER >= 0x10100000L)
  if (dhp_bn == NULL || dhg_bn == NULL
      || !DH_set0_pqg(dh, dhp_bn, NULL, dhg_bn)) {
    DH_free(dh);
    BN_free(dhp_bn);
    BN_free(dhg_bn);
    return NULL;
  }
#else
  dh->p = dhp_bn;
  dh->g = dhg_bn;
  if ((dh->p == NULL) || (dh->g == NULL))
  { DH_free(dh); return(NULL); }
#endif
  return(dh);
}
/*
   -----BEGIN DH PARAMETERS-----
   MIIBCAKCAQEA8Z2AxcJ/6KU32ihGbJUKxWzjfh0fSi7Xa8GATsnAP7NXc3Ly2jAV
   sdPWJZCviz+BRnWxHhuFWmwToXNl/JDzvLmcoGJ0fCQkJ4ASPTbpYngx6S+W9NTy
   BO8kLGAEQfA+6fS0XE/782SRsZ9bv+W+b9db7TSUUVjfAFtYrrtTUN78CpFvO8d6
   XnzuX14+QQCC1UWYzAH7XGS7+wZV5RlqOHdAAcbOtVKCqnuA5jezEIluQmMz+My2
   yMad4pg7/P7k0rXTGW/XYryqFpIUoNDBe6noFvxqZm8pyhgoTAbYq5JA1YOd6yMX
   ngYg9+iMuQ3nnUBQp6F01t/yEgiza09KqwIBAg==
   -----END DH PARAMETERS-----
   */

DH *get_dh1024() {
  static unsigned char dh1024_p[]={
    0xDA,0xF0,0x76,0xC8,0x15,0xC8,0xD2,0x62,0xED,0xBB,0x58,0x50,
    0xB8,0x9A,0xF0,0x48,0xEF,0x09,0x6A,0x07,0xF5,0x42,0x34,0x92,
    0xBA,0xC2,0x5E,0xA9,0x2D,0xC9,0xED,0xE7,0xF8,0x93,0x67,0x46,
    0x47,0x42,0xD8,0xEB,0xA4,0x72,0xB4,0x51,0xF1,0xF2,0xCD,0xDC,
    0x55,0x7D,0xD9,0x69,0x2B,0x91,0x57,0xA5,0xC3,0xDB,0x35,0x0C,
    0xBE,0xAD,0x11,0xF2,0x26,0xB9,0x97,0x8E,0x71,0x80,0xEF,0x03,
    0x01,0xEC,0x1B,0xE4,0xB3,0x6C,0xEB,0x52,0xF4,0x0E,0x15,0x50,
    0xB5,0x5C,0x67,0xB8,0x57,0xAE,0xB9,0xC2,0xA9,0xD1,0x40,0x92,
    0x9E,0xFC,0xAE,0x8E,0xCA,0xC6,0xA3,0xD5,0x02,0x41,0x80,0xD0,
    0x06,0x16,0xB7,0xB4,0xD1,0xC5,0x10,0xA9,0x18,0xE6,0x13,0xD9,
    0x07,0x40,0x15,0xBC,0xFF,0x15,0xA3,0x5B,
  };
  static unsigned char dh1024_g[]={
    0x02,
  };
  DH *dh;
  BIGNUM *dhp_bn, *dhg_bn;

  if ((dh=DH_new()) == NULL) return(NULL);
  dhp_bn = BN_bin2bn(dh1024_p, sizeof(dh1024_p), NULL);
  dhg_bn = BN_bin2bn(dh1024_g, sizeof(dh1024_g), NULL);
#if (defined(LIBRESSL_VERSION_NUMBER) && LIBRESSL_VERSION_NUMBER >= 0x30500000L) || \
    (!defined(LIBRESSL_VERSION_NUMBER) && OPENSSL_VERSION_NUMBER >= 0x10100000L)
  if (dhp_bn == NULL || dhg_bn == NULL
      || !DH_set0_pqg(dh, dhp_bn, NULL, dhg_bn)) {
    DH_free(dh);
    BN_free(dhp_bn);
    BN_free(dhg_bn);
    return NULL;
  }
#else
  dh->p = dhp_bn;
  dh->g = dhg_bn;
  if ((dh->p == NULL) || (dh->g == NULL))
  { DH_free(dh); return(NULL); }
#endif
  return(dh);
}
/*
   -----BEGIN DH PARAMETERS-----
   MIGHAoGBANrwdsgVyNJi7btYULia8EjvCWoH9UI0krrCXqktye3n+JNnRkdC2Ouk
   crRR8fLN3FV92WkrkVelw9s1DL6tEfImuZeOcYDvAwHsG+SzbOtS9A4VULVcZ7hX
   rrnCqdFAkp78ro7KxqPVAkGA0AYWt7TRxRCpGOYT2QdAFbz/FaNbAgEC
   -----END DH PARAMETERS-----
   */
DH *get_dh512() {
  static unsigned char dh512_p[]={
    0xC1,0x6E,0x10,0x0D,0x46,0x47,0xDA,0x08,0x42,0x54,0x02,0x23,
    0x85,0xEE,0x07,0x3C,0x2E,0x7B,0xA9,0x3A,0xA8,0x88,0xDD,0x4E,
    0x3F,0x71,0x8E,0xD3,0x52,0x3A,0xCA,0xC9,0xC3,0xF4,0xCD,0x65,
    0x5E,0x05,0x25,0xA9,0xBA,0x10,0x8A,0x88,0x37,0xB3,0xCD,0x5D,
    0x02,0x03,0x06,0x35,0x47,0x3C,0xD9,0x44,0x99,0xBB,0x9B,0x4C,
    0x24,0xB2,0xC0,0x13,
  };
  static unsigned char dh512_g[]={
    0x02,
  };
  DH *dh;
  BIGNUM *dhp_bn, *dhg_bn;

  if ((dh=DH_new()) == NULL) return(NULL);
  dhp_bn = BN_bin2bn(dh512_p, sizeof(dh512_p), NULL);
  dhg_bn = BN_bin2bn(dh512_g, sizeof(dh512_g), NULL);
#if (defined(LIBRESSL_VERSION_NUMBER) && LIBRESSL_VERSION_NUMBER >= 0x30500000L) || \
    (!defined(LIBRESSL_VERSION_NUMBER) && OPENSSL_VERSION_NUMBER >= 0x10100000L)
  if (dhp_bn == NULL || dhg_bn == NULL
      || !DH_set0_pqg(dh, dhp_bn, NULL, dhg_bn)) {
    DH_free(dh);
    BN_free(dhp_bn);
    BN_free(dhg_bn);
    return NULL;
  }
#else
  dh->p = dhp_bn;
  dh->g = dhg_bn;
  if ((dh->p == NULL) || (dh->g == NULL))
  { DH_free(dh); return(NULL); }
#endif
  return(dh);
}
/*
   -----BEGIN DH PARAMETERS-----
   MEYCQQDBbhANRkfaCEJUAiOF7gc8LnupOqiI3U4/cY7TUjrKycP0zWVeBSWpuhCK
   iDezzV0CAwY1RzzZRJm7m0wkssATAgEC
   -----END DH PARAMETERS-----
   */

DH *get_dh4096()
{
    static unsigned char dhp_4096[] = {
	0xDB, 0xEA, 0x68, 0x34, 0x68, 0xC4, 0xB8, 0xB0, 0xDA, 0x5C, 
	0xFF, 0x8E, 0x4D, 0xA0, 0xD2, 0x50, 0x60, 0xCC, 0x5E, 0x48, 
	0xDD, 0x38, 0xC8, 0x72, 0x71, 0xA6, 0xFE, 0x73, 0x91, 0x32, 
	0xB5, 0x41, 0xB4, 0x2C, 0x19, 0xB6, 0x86, 0x66, 0xC2, 0x01, 
	0x96, 0xF9, 0xB5, 0x9C, 0x5D, 0xC9, 0xA1, 0x15, 0xEC, 0x59, 
	0x8A, 0xDB, 0xE6, 0xEB, 0x99, 0xB0, 0xDA, 0x04, 0x7C, 0x65, 
	0x58, 0x89, 0xEA, 0x89, 0x4B, 0x53, 0x9C, 0x43, 0x60, 0xC7, 
	0x42, 0x1D, 0xB5, 0x29, 0x35, 0xD3, 0x29, 0x94, 0x3C, 0x44, 
	0x82, 0x63, 0x4A, 0xF2, 0xA1, 0xE0, 0x09, 0x81, 0x53, 0x8F, 
	0xB3, 0xCD, 0x0D, 0x3F, 0x06, 0x4D, 0x56, 0x9F, 0x98, 0x0F, 
	0x5F, 0x98, 0x95, 0x07, 0x09, 0xC4, 0xFE, 0x5B, 0x32, 0xBA, 
	0x16, 0xDA, 0xB9, 0x58, 0xF3, 0x99, 0x73, 0x82, 0xC8, 0x06, 
	0x9D, 0x06, 0x94, 0x89, 0x0B, 0x0E, 0xB7, 0xE7, 0x18, 0x90, 
	0x6F, 0x91, 0xAB, 0xEA, 0x5F, 0xD0, 0xC0, 0xBE, 0xD4, 0x9E, 
	0x05, 0x4E, 0xC7, 0x5A, 0x13, 0x6D, 0x64, 0x5F, 0x87, 0xC6, 
	0x0A, 0x01, 0x74, 0x6A, 0x43, 0x05, 0x0A, 0xD6, 0xAA, 0x57, 
	0x00, 0xC0, 0x26, 0x58, 0xEF, 0x8E, 0xF2, 0x20, 0x57, 0x79, 
	0xBF, 0x50, 0x9D, 0x3D, 0x05, 0xFB, 0xBA, 0xB4, 0x98, 0x72, 
	0xBE, 0x93, 0x2A, 0x45, 0x39, 0xA7, 0x6D, 0x97, 0x4A, 0x5A, 
	0x50, 0x8F, 0x8A, 0xC9, 0x02, 0x34, 0x4A, 0x94, 0x52, 0xC1, 
	0x9A, 0xDB, 0x07, 0x88, 0x2B, 0xED, 0x00, 0x84, 0x58, 0x95, 
	0x2F, 0x04, 0xE1, 0x76, 0x03, 0x88, 0x1A, 0x1B, 0xBB, 0x21, 
	0x00, 0x19, 0x90, 0xE5, 0xD6, 0x11, 0xA6, 0x47, 0x17, 0xFF, 
	0x31, 0xD5, 0xE1, 0xA3, 0x3F, 0xE4, 0x9A, 0xFB, 0xE5, 0x0D, 
	0xC6, 0xA2, 0x21, 0x1B, 0xBE, 0xA5, 0x39, 0xD2, 0x2D, 0xB0, 
	0x68, 0xF5, 0xDB, 0x2B, 0x3C, 0x3C, 0xE6, 0x07, 0xC3, 0x59, 
	0xFC, 0x06, 0xA1, 0x20, 0x73, 0xAB, 0x59, 0xEA, 0xD8, 0x52, 
	0x73, 0xA7, 0x27, 0x47, 0x7A, 0xBB, 0x76, 0xB9, 0x0E, 0x82, 
	0x4A, 0xB2, 0x70, 0x7B, 0xA8, 0xF5, 0x34, 0x41, 0xF0, 0x55, 
	0x15, 0x83, 0x73, 0xDC, 0xDE, 0x28, 0x24, 0x78, 0x34, 0x0F, 
	0x4F, 0xCB, 0x5A, 0x21, 0xE8, 0x25, 0x22, 0xAB, 0xD8, 0xFF, 
	0x5F, 0x79, 0xAE, 0xF5, 0x15, 0x54, 0xB3, 0xDC, 0xA1, 0x3D, 
	0x84, 0x14, 0x08, 0xEF, 0xFC, 0xC0, 0x72, 0xB4, 0x3F, 0xF6, 
	0x9C, 0x19, 0xBF, 0x03, 0x58, 0xDD, 0xA0, 0xF5, 0x2C, 0xD4, 
	0x10, 0xC6, 0x7E, 0xD6, 0x00, 0x6A, 0xC8, 0xA3, 0x21, 0x49, 
	0xF3, 0x00, 0xAF, 0x74, 0x53, 0xD6, 0x4D, 0xC1, 0xA6, 0x38, 
	0xFA, 0x7D, 0xEC, 0x29, 0xFE, 0x05, 0xC4, 0xDE, 0xF3, 0x44, 
	0xD4, 0x6D, 0xD4, 0x28, 0xB1, 0x69, 0x76, 0x16, 0x98, 0x57, 
	0x95, 0xAB, 0x1A, 0x48, 0xD4, 0x4D, 0x54, 0xF2, 0x25, 0xCA, 
	0x0F, 0xDE, 0x1C, 0x8A, 0x37, 0xA3, 0xD2, 0xFD, 0x3D, 0x25, 
	0x68, 0xF7, 0x3C, 0xD0, 0x00, 0xF5, 0xD4, 0xC5, 0x3B, 0xB0, 
	0x4B, 0xFE, 0xE5, 0x65, 0x65, 0xA6, 0x49, 0x7C, 0x6C, 0x8C, 
	0x05, 0x2D, 0x37, 0x05, 0xFA, 0xEC, 0x5B, 0x8B, 0xB0, 0xAA, 
	0x0A, 0x7F, 0x8E, 0x97, 0x7A, 0x2A, 0x04, 0x75, 0x3E, 0x60, 
	0xE3, 0xBD, 0xDC, 0xC7, 0x08, 0x21, 0xFA, 0x46, 0x89, 0x12, 
	0x02, 0x02, 0xDE, 0x2D, 0x47, 0xFD, 0x3D, 0xC3, 0x4C, 0x9E, 
	0x3F, 0x0C, 0xF3, 0x05, 0x74, 0xD2, 0x00, 0x8F, 0x09, 0xA2, 
	0x9E, 0x8E, 0x64, 0x63, 0x91, 0xA0, 0xA0, 0x54, 0xCD, 0x70, 
	0xB3, 0x81, 0x07, 0x94, 0xE7, 0x81, 0x69, 0x97, 0xFD, 0x41, 
	0x58, 0xB6, 0x00, 0x37, 0x25, 0x28, 0xC3, 0x55, 0x92, 0xC0, 
	0x12, 0x0A, 0x4E, 0x86, 0x75, 0xF5, 0x7D, 0x15, 0x36, 0xC9, 
	0x52, 0x33
    };
    static unsigned char dhg_4096[] = {
	0x02
    };
    DH *dh = DH_new();
    BIGNUM *dhp_bn, *dhg_bn;

    if (dh == NULL)
        return NULL;
    dhp_bn = BN_bin2bn(dhp_4096, sizeof(dhp_4096), NULL);
    dhg_bn = BN_bin2bn(dhg_4096, sizeof(dhg_4096), NULL);
#if (defined(LIBRESSL_VERSION_NUMBER) && LIBRESSL_VERSION_NUMBER >= 0x30500000L) || \
    (!defined(LIBRESSL_VERSION_NUMBER) && OPENSSL_VERSION_NUMBER >= 0x10100000L)
  if (dhp_bn == NULL || dhg_bn == NULL
      || !DH_set0_pqg(dh, dhp_bn, NULL, dhg_bn)) {
    DH_free(dh);
    BN_free(dhp_bn);
    BN_free(dhg_bn);
    return NULL;
  }
#else
  dh->p = dhp_bn;
  dh->g = dhg_bn;
  if ((dh->p == NULL) || (dh->g == NULL))
  { DH_free(dh); return(NULL); }
#endif
    return dh;
}
/*
-----BEGIN DH PARAMETERS-----
MIICCAKCAgEA2+poNGjEuLDaXP+OTaDSUGDMXkjdOMhycab+c5EytUG0LBm2hmbC
AZb5tZxdyaEV7FmK2+brmbDaBHxlWInqiUtTnENgx0IdtSk10ymUPESCY0ryoeAJ
gVOPs80NPwZNVp+YD1+YlQcJxP5bMroW2rlY85lzgsgGnQaUiQsOt+cYkG+Rq+pf
0MC+1J4FTsdaE21kX4fGCgF0akMFCtaqVwDAJljvjvIgV3m/UJ09Bfu6tJhyvpMq
RTmnbZdKWlCPiskCNEqUUsGa2weIK+0AhFiVLwThdgOIGhu7IQAZkOXWEaZHF/8x
1eGjP+Sa++UNxqIhG76lOdItsGj12ys8POYHw1n8BqEgc6tZ6thSc6cnR3q7drkO
gkqycHuo9TRB8FUVg3Pc3igkeDQPT8taIeglIqvY/195rvUVVLPcoT2EFAjv/MBy
tD/2nBm/A1jdoPUs1BDGftYAasijIUnzAK90U9ZNwaY4+n3sKf4FxN7zRNRt1Cix
aXYWmFeVqxpI1E1U8iXKD94cijej0v09JWj3PNAA9dTFO7BL/uVlZaZJfGyMBS03
BfrsW4uwqgp/jpd6KgR1PmDjvdzHCCH6RokSAgLeLUf9PcNMnj8M8wV00gCPCaKe
jmRjkaCgVM1ws4EHlOeBaZf9QVi2ADclKMNVksASCk6GdfV9FTbJUjMCAQI=
-----END DH PARAMETERS-----
*/
/* vim: set sts=2 sw=2 ts=8 et: */
