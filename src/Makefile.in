# Makefile for src/

SHELL = @SHELL@
top_srcdir = @top_srcdir@
top_builddir = @top_builddir@
srcdir = @srcdir@
VPATH = @srcdir@

@SET_MAKE@

CXXFLAGS = $(CXXFLAGS)
CFLAGS = $(CFLGS)
CPPFLAGS = @CPPFLAGS@ -I. -I$(top_srcdir) -I$(top_srcdir)/lib -I$(top_srcdir)/pack @DEFS@ $(INCLUDES) '-DCOMMIT="$(COMMIT)"' '-DBRANCH="$(BRANCH)"' -DBUILDTS=$(BUILDTS) '-DVERSION="$(VERSION)"'
LDFLAGS = @LDFLAGS@ $(DEBLDFLAGS)
SETTINGSFILE = $(top_srcdir)/doc/settings.txt
RESPONSESFILE = $(top_srcdir)/doc/responses.txt
HELPFILE = $(top_srcdir)/doc/help.txt
EXPORTS = $(srcdir)/.defs/exports

include $(top_srcdir)/build/build.mk

OBJCOPY = @OBJCOPY@

OBJS = auth.So \
	base64.So \
	binary.So \
	binds.So \
	bg.So \
	botcmd.So \
	botmsg.So \
	botnet.So \
	chanprog.So \
	cmds.So \
	core_binds.So \
	conf.So \
	crypt.So \
	dcc.So \
	dccutil.So \
	debug.So \
	dl.So \
	egg_timer.So \
	enclink.So \
	EncryptedStream.So \
	flags.So \
	garble.So \
	libcrypto.So \
	libssl.So \
	libtcl.So \
	log.So \
	main.So \
	match.So \
	misc.So \
	misc_file.So \
	net.So \
	openssl.So \
	adns.So \
	response.So \
	rfc1459.So \
	RfcString.o \
	set.So \
	shell.So \
	socket.So \
	sprintf.So \
	userent.So \
	userrec.So \
	users.So \
	mod/channels.mod/channels.So \
	mod/console.mod/console.So \
	mod/ctcp.mod/ctcp.So \
	mod/irc.mod/irc.So \
	mod/server.mod/server.So \
	mod/share.mod/share.So \
	mod/transfer.mod/transfer.So \
	mod/update.mod/update.So \
	compat/dn_expand.o \
	compat/snprintf.o \
	compat/memmem.o \
	compat/memutil.o \
	compat/openssl.o \
	compat/strlcpy.o \
	compat/strsep.o \
	crypto/aes_util.o \
	crypto/bf_util.o \
	crypto/dh_util.o

MAKE_GENERIC = $(MAKE) 'MAKE=$(MAKE)' 'MAKEFLAGS=$(MAKEFLAGS)' 'CXX=$(CXX)' 'LD=$(LD)' 'STRIP=$(STRIP)' 'CXXFLAGS=$(CXXFLAGS)' 'CFLGS=$(CFLGS)' 'CCDEPMODE=$(CCDEPMODE)'

blah:
	@echo ""
	@echo "Use the build script."
	@echo ""

set.cc: set_default.h

set_default.h: $(SETTINGSFILE) $(top_srcdir)/build/makeset.sh
	@echo -e "[GEN]	\033[1m$<\033[0m -> \033[1m$@\033[0m"
	$(top_srcdir)/build/makeset.sh < $(SETTINGSFILE) > $@

response.cc: responses.cc

responses.cc: $(RESPONSESFILE) $(top_srcdir)/build/makeres.sh
	@echo -e "[GEN]	\033[1m$<\033[0m -> \033[1m$@\033[0m"
	$(top_srcdir)/build/makeres.sh < $(RESPONSESFILE) > $@

cmds.cc: help.h

help.h: $(HELPFILE) $(top_srcdir)/build/makehelp.sh $(STRINGFIX)
	@echo -e "{GEN}	\033[1m$<\033[0m -> \033[1m$@\033[0m"
	$(top_srcdir)/build/makehelp.sh < $(HELPFILE) | $(STRINGFIX) help > $@

sorthelp: sorthelp.cc $(top_builddir)/lib/bdlib/libbdlib.a
	@echo -e "[CXX]	\033[1m$<\033[0m"
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $< $(top_builddir)/lib/bdlib/libbdlib.a $(LDFLAGS) -o $@
	@$(STRIP) $@@EXEEXT@

../$(EGGEXEC): $(OBJS) $(top_builddir)/lib/bdlib/libbdlib.a @LIBELF_BUNDLED@ $(EXPORTS)
	@echo -e "[LD ]	\033[1m$@\033[0m"
	$(LD) $(LDFLAGS) -o ../$(EGGEXEC) $(OBJS) $(top_builddir)/lib/bdlib/libbdlib.a \
	    $(LIBS) @LIBELF_LIB@ -Wl,--dynamic-list=$(EXPORTS)
	@$(STRIP) ../$(EGGEXEC)
	@$(OBJCOPY) ../$(EGGEXEC)
	@echo "Successful compile: $(EGGEXEC)"

clean:
	@rm -f .depend *.o $(OBJS) *~ _*.c _*.cc *.ii *.i set_default.h \
	    responses.cc help.h $(STRINGFIX)

include ./.deps/includes
